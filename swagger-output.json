{
  "openapi": "3.0.0",
  "info": {
    "title": "Zuri Task 2 (Basic CRUD)",
    "version": "1.0.0",
    "description": "A REST API with Basic CRUD Operation",
    "contact": {
      "name": "Bakare Praise",
      "email": "bakarepraise3@gmail.com",
      "url": "https://bakare.tech"
    }
  },
  "paths": {
    "/": {
      "get": {
        "summary": "Welcome message",
        "description": "Get a welcome message and links to server health and API documentation.",
        "responses": {
          "200": {
            "description": "Welcome message and links",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A welcome message.",
                      "example": "Your have reached Bakare Praise Zuri Task 2 Server"
                    },
                    "health": {
                      "type": "string",
                      "description": "URL to check server health.",
                      "example": "/health"
                    },
                    "docs": {
                      "type": "string",
                      "description": "URL to access API documentation.",
                      "example": "/swagger"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Check server health",
        "description": "Check if the server is running fine.",
        "responses": {
          "200": {
            "description": "Server is running fine",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Server is running fine"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/user": {
      "post": {
        "summary": "Create a new user",
        "description": "Create a new user record.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The user's name.",
                    "example": "John Doe"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message.",
                      "example": "User created successfully"
                    },
                    "user": {
                      "type": "object",
                      "description": "The created user object.",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The user's ID.",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "description": "The user's name.",
                          "example": "John Doe"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Validation error"
                    },
                    "details": {
                      "type": "object",
                      "description": "Validation details.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Validation error message for the \"name\" field.",
                          "example": "Name is required."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "Get a list of all users",
        "description": "Retrieve a list of all users from the server.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "description": "Page number (default: 0)"
            },
            "description": "Page number for pagination."
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "description": "Page size (default: 20)"
            },
            "description": "Number of users per page."
          }
        ],
        "responses": {
          "200": {
            "description": "List of users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "The total count of users.",
                      "example": 0
                    },
                    "users": {
                      "type": "array",
                      "description": "An array of user objects.",
                      "items": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user/{key}": {
      "get": {
        "summary": "Get user by name or id",
        "description": "Retrieve a user by their name or id.",
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "required": true,
            "description": "The key of the user to retrieve.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The user's ID.",
                      "example": 0
                    },
                    "name": {
                      "type": "string",
                      "description": "The user's name.",
                      "example": "John Doe"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "key must be presence"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user/{id}": {
      "put": {
        "summary": "Update user details by ID",
        "description": "Update user details based on their ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The ID of the user to update.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "new detail.",
                    "example": "John Doe"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User details updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message.",
                      "example": "User details updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Validation error"
                    },
                    "details": {
                      "type": "object",
                      "description": "Validation details.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Validation error message for the \"id\" field.",
                          "example": "id is required."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a user by ID",
        "description": "Delete a user based on their ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The ID of the user to delete.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message.",
                      "example": "User deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Validation error"
                    },
                    "details": {
                      "type": "object",
                      "description": "Validation details.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Validation error message for the \"id\" field.",
                          "example": "id is required."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {},
  "tags": []
}
